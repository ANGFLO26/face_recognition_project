from model import FaceRecognitionModel
from pymongo.errors import ConnectionFailure

# Ki·ªÉm tra k·∫øt n·ªëi MongoDB
def check_mongo_connection(face_recognition_model):
    try:
        face_recognition_model.client.admin.command("ping")
        print("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng!")
    except ConnectionFailure as e:
        print(f"‚ùå K·∫øt n·ªëi MongoDB th·∫•t b·∫°i. L·ªói: {e}")
        return False
    return True

# Kh·ªüi t·∫°o m√¥ h√¨nh
face_recognition_model = FaceRecognitionModel()

# Ki·ªÉm tra k·∫øt n·ªëi tr∆∞·ªõc khi ti·∫øp t·ª•c
if not check_mongo_connection(face_recognition_model):
    exit()  # Tho√°t ch∆∞∆°ng tr√¨nh n·∫øu kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c

# ƒêƒÉng k√Ω ng∆∞·ªùi d√πng
username = input("Nh·∫≠p t√™n ng∆∞·ªùi d√πng: ")
image_path = "/home/phanvantai/THE_END/datatest/132.jpg"

registration_success = face_recognition_model.register_user(username, image_path)

if registration_success:
    print(f"‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng ng∆∞·ªùi d√πng: {username}")

    # X√°c th·ª±c ng∆∞·ªùi d√πng
    authenticated_user = face_recognition_model.authenticate_user(image_path)
    if authenticated_user:
        print(f"‚úÖ Ng∆∞·ªùi d√πng x√°c th·ª±c: {authenticated_user}")
    else:
        print("‚ùå Kh√¥ng th·ªÉ x√°c th·ª±c. C√≥ th·ªÉ m√¥ h√¨nh ch∆∞a ƒë∆∞·ª£c hu·∫•n luy·ªán ƒë·ªß d·ªØ li·ªáu.")
else:
    print("‚ùå ƒêƒÉng k√Ω th·∫•t b·∫°i.")

# Ki·ªÉm tra vector ng∆∞·ªùi d√πng
print("üîç Danh s√°ch vector ng∆∞·ªùi d√πng:")
face_recognition_model.check_user_vectors()
